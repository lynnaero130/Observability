function [x,xt,PP] = KF(imu,uwb,x0,dt,sigma_omega,sigma_v)
%This function is KF.
A =[zeros(3,3) eye(3) zeros(3,2)
    zeros(5,8)];
B = [zeros(3,3)
  eye(3)
  zeros(2,3)];
G = eye(8)+A*dt;
H = (eye(8)*dt+0.5*A*dt^2)*B;

%---------- use to calculate delta_p----------%
K = size(imu,2);
delta_v(:,1) = imu(:,1)*dt;
for i = 2:K
    delta_v(:,i) = delta_v(:,i-1) + imu(:,i)*dt;
end

 delta_p(:,1) = 0.5*dt^2*imu(:,1); % the position variance rised from acc.
for i = 2:K
    delta_p(:,i) = delta_p(:,i-1) + delta_v(:,i-1)*dt + 0.5*dt^2*imu(:,i);
end
%--------- noise-----------%
Q=diag([diag(sigma_omega)'*1000 diag(sigma_omega)' sigma_omega(1)*1000 sigma_omega(1)*1000]); 
% Q=diag([diag(sigma_omega)' diag(sigma_omega)' sigma_omega(1)*10 sigma_omega(1)]*1000); 
% Q(1,1) = 1000000;
% Q(2,2) = 1000000;
% Q(3,3) = 1000000;
% Q = H*(sigma_omega)*H'*10100;
% Q(7,7) = Q(6,6)*100;
% Q(8,8) = Q(7,7)*100;
% Q=Q*100;
% Q(1,1) = 10;
% Q(2,2) = 10;
% Q(3,3) = 10;

R = 100;
P{1,1} = diag([1 1 1 0.01 0.01 0.01 10000 100000]);
% P{1,1} = diag([0.01 0.01 0.01 0.01 0.01 0.01 1e2 1e2]);
% P{1,1} = diag([0.01 0.01 0.01 0.1 0.1 0.1 0.1 0.01]);
% P{1,1} = diag([0.1 0.1 0.1 0.1 0.1 0.1 100 100])*10;
P{1,1} = diag([10*ones(1,3) 0.01*ones(1,3) 1000 1000]);
% P{1,1} = [24.3063017194717,13.8187177875499,-2.01144758975275,0.324220177567656,0.237536549298871,0.0126290271541353,0.707567493332427,0.0412320675263051;13.8187177875500,17.7378042758114,-9.44972120971642,0.210932967681332,0.227630197563178,-0.158467787019242,-0.860892209089445,-0.0634930070386315;-2.01144758975281,-9.44972120971647,8.64506958832310,-0.0559808773547795,-0.0929588888002099,0.157149452111826,0.356612908973350,-0.0364338574245617;0.324220177567656,0.210932967681330,-0.0559808773547773,0.00792456628066643,0.00365188348573255,-0.000199732510101534,0.0129337707682880,0.000638156341107323;0.237536549298873,0.227630197563179,-0.0929588888002092,0.00365188348573261,0.00617776148566059,-0.00238859580589154,-0.00364094476559328,-0.000861249117019197;0.0126290271541316,-0.158467787019242,0.157149452111824,-0.000199732510101598,-0.00238859580589154,0.00477819920358982,0.0243272991228435,-0.000303859428013066;0.707567493332418,-0.860892209089442,0.356612908973342,0.0129337707682879,-0.00364094476559321,0.0243272991228435,2.10715493101124,-0.00767101907643934;0.0412320675263029,-0.0634930070386303,-0.0364338574245640,0.000638156341107288,-0.000861249117019177,-0.000303859428013110,-0.00767101907643937,0.0109895767448144];
 
%--------- noise-----------%
  
x(:,1) =[x0(1:3,1); x0(4:6,1); x0(1:3,1)'*x0(4:6,1);x0(4:6,1)'*x0(4:6,1)]; % initial estimation
xt(:,1) =[x0(1:3,1); x0(4:6,1); x0(1:3,1)'*x0(4:6,1);x0(4:6,1)'*x0(4:6,1)]; 
y = 0.5*uwb(2:end).^2 - 0.5*uwb(1).^2 + 0.5*(delta_p(1,:).^2 + delta_p(2,:).^2 +delta_p(3,:).^2);

 for i = 1:K
%     if(Q(7,7)>sqrt(sigma_omega(1,1))*10)
%         Q(7:8,7:8)=Q(7:8,7:8)*0.999;
%         Q(8,8)=Q(7,7);
%     end
    if(R>sigma_v)
       R=R*0.99; 
    end
    C = [delta_p(:,i)' zeros(1,3) i*dt 0.5*(i*dt)^2];
%     if(i<20)
%        x(:,i+1) = G*x(:,i) + H*imu(:,i);  
%        xt(:,i+1)=G*xt(:,i) + H*imu(:,i); 
%        P{:,i+1}=P{:,i};
%        continue
%     end
  
    % prediction
    x_ = G*x(:,i) + H*imu(:,i); 
    xt(:,i+1)=G*xt(:,i) + H*imu(:,i);  
    P_ = G*P{:,i}*G' + Q;
    CT=C; 
    if(i==200)
    CT=C;  
    end

    %update
    KK = P_*CT'/(CT*P_*CT' + R);

    Kt=KK;
    KR(:,i)=KK;
    dc(i)=(y(:,i) - C*x_);

    x(:,i+1) = x_ + Kt*(y(:,i) - C*x_);

    P{:,i+1} = (eye(8) - KK*CT)*P_;

    
 end
 
%  figure
%  plot(dc);
%  grid on;
%  figure
%  plot(KR(1,:));
%  grid on
%  
 PP=P{:,i+1};
 
%  figure
%  grid on
%  hold on
%  plot(uwb);
%  plot(sum(abs(xt(1:3,:)).^2).^(1/2),'r:')
%  plot(sum(abs(x(1:3,:)).^2).^(1/2)+0.1,'g--')
 
 figure
 t = dt*(0:K);
 for a = 1:(K+1)
     Px(a) = P{1,a}(1,1);
     Py(a) = P{1,a}(2,2);
     Pz(a) = P{1,a}(3,3);
 end
 subplot(3,1,1)
 plot(t,Px)
 legend('x')
subplot(3,1,2)
 plot(t,Py)
 legend('y')
 subplot(3,1,3)
 plot(t,Pz)
 legend('z')

